(1) To get the sum of all the subset of a array
Let array be a1,a2,a2.....an
and you want to find sum of all the subset 
Solution 1:
Generate all the subset and find the sum
Complexity:O(2^n)

Solution 2:
Well If you remember in Combinatorics and Binomial Theorem:
(1+a1)*(1+a2)*(1+a3)(1+a4)....(1+an)
gives 1+sum(all the subset of array)
So just calculate above and subtract it by 1
Complexity:O(n)

#############################################################################################################################
(2)Given an array find if there are four numbers who sum upto x. A number in array can be used any time  can be used any time
Solution 1:use brute force to generate a+b+c+d 
Complexity(n^4)

Solution 2:again use brute force but in sum cleaver way 
find (a+b+c) and find if x-(a+b+c) exits in array using hash
Complexity:O(n^3)

Solution 3: now we use brute force with divide and conquer
find all (a+b) and(c+d) and store them in hash table
and for each (a+b) find whether x-(a+b) exists in (c+d) using hash
Complexity:O(n^2)
 #############################################################################################################################
 to Print cycle in an undirected graph use an array visit and mark it 0 ,1 and 2
 example http://codeforces.com/contest/699/problem/D see the code
#########################################################################################
given an array a.whose all element are zero intially ..now you have given q queries
of type l,r vl.in each query you will add vl from range l to r
and after all queries print the array
solution:O(q)
let query be l,r ,vl
then you just hv to make the array  a[l]+=vl and a[r+1]-=vl
and after all queries just take prefix sum 
/////////////////////////////////////////
this method can be used in overlapped segmnet
like you have given sum segment and you want to find the elment which is covered exactly segments time
example http://codeforces.com/contest/731/problem/D

######################################################################################################
finding lcm of n numbers
int lcm(int[] a, int n) {
  int res = 1, i;
  for (i = 0; i < n; i++) {
    res = res*a[i]/gcd(res, a[i]);
  }
  return res;
}
###########################################################################################################
Goldbach's conjection
1) every even number(greater then 2) can be expressed as sum of two prime numbers

###############################################################################
lets say you have given an array ARR[1...n] 
now there are m queries of type
x where x is an index in given array
now for each query you have to print index of the first elements(both left and right side of x) which are greater then ARR[x]
Example: 1 based index
ARR[]={1,4,5,2,3,1,3,4,6}
let query be
x=5
then answer will be 3 (left of x) and 8(right of x)
because ARR[3]>ARR[x] and ARR[8]>ARR[x]
Solution:
THis question is based in stack
Before any qyery will get answer for every index in O(n) time
Now take two array right[1..n] and left[1..n]
where right[i] and left[i] holds the answer for ith index
Observations:
lets first concentrate on only one side.let it  right side
now we want to find index of first greater element to the right of ARR[x]
Lets think in other way.
instead of finding answer for every index .we will try to find for which index answer will be index i
let say we are at index i.now lets say for index j answer is index i
onte that if i is answer of index j then ARR[j]<ARR[i] and all the elements betwenn jth index and ith index will be smaller 
then ARR[j](if not then for ju answer must be an inbetween index).So we will all element for which answer is not  known and pop all the elment from stack for which we know the answer
Example:
let ARR[]={9,4,6,10}
i=1
then i cant an answer of any elment . push it into stack
STACK={1}//note we are pushing index not value
i=2
now since 9 is greater then 4 so 4 cant be answer of 9 so push 4
STACK={1,2}
i=3
now compare 6 with 4 so for index=2 answer is 3
and since we know the answer of 4 .hence no need to keep it.so pop it
but 9>6 so push 6
STACK={1,3}
i=4
10>6 for 3 answer is 4
10>9 for 1 answer is 4
so pop 1 and 3
STACK={4}

In this we can also implement left side.but from opposite side
$$####################################################################################################################

OverFlow Problem:
let say you want to do
int a=1e9,b=1e9;
int c;
c=(a*b)%mod;
then here a*b will result in overflow
so first convert a and b to long long
and then convert back to int
c=(int)((ll)(a)*(ll)*(b))%mod;

#############################################################################################
every number can be expressed as sum of square of four number

 see-https://discuss.codechef.com/questions/90269/foursq-editorial
#################################################################################################
Wilson theorem
If p is a prime number , then ( p - 1)! â‰¡ -1 (mod p ) 
